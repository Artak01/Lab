Տրված է NxN չափանի քառակուսային մատրից։ Ստուգել արդյոք տրված մատրիցը սիմետրիկ է թե ոչ։
#include <iostream>

void scan(int mat[][10], int);
void print(int mat[][10], int);
bool chack(int mat[][10], int);

int main(){
    int mat[10][10];
    int n = 0; 
    do{
        std::cout << "Enter size: ";
        std::cin >> n;
    }while(n < 1 || n > 10);
    scan(mat, n);
    print(mat, n);
    std::cout << chack(mat, n);    
}
void scan(int mat[][10], int n){
    for(int i = 0; i < n; ++i){
         for(int j = 0; j < n; ++j){
            mat[i][j] = rand()%9;
         }
    }
}
void print(int mat[][10], int n){
    for(int i = 0; i < n; ++i){
         for(int j = 0; j < n; ++j){
             std::cout << mat[i][j] << " ";
         }
         std::cout << std::endl;
    }
    std::cout << std::endl;
}
bool chack(int mat[][10], int n){
    for(int i = 0; i < n; ++i){
        for(int j = 0; j < n; ++j){
            if ((i != j) && mat[i][j] != mat[j][i]){
                return false;
            }
        }
    }
    return true;
}

Տրված են NxN չափանի երկու քառակուսային մատրիցներ։ Ստանալ երրորդ մատրից, որը իրենից կներկայացնի նախորդ երկուսի գումարը։
#include <iostream>

void scan(int mat[][10], int);
void print(int mat[][10], int);
void sum(int mat1[][10], int mat2[][10], int);


int main(){
    int mat1[10][10];
    int mat2[10][10];
    int n = 0; 
    do{
        std::cout << "Enter size: ";
        std::cin >> n;
    }while(n < 1 || n > 10);
    
    scan(mat1, n);
    scan(mat2, n);
    print(mat1, n);
    print(mat2, n);
    sum(mat1, mat2, n);
    print(mat1, n);
}


void scan(int mat[][10], int n){
    for(int i = 0; i < n; ++i){
         for(int j = 0; j < n; ++j){
            mat[i][j] = rand()%9;
         }
    }
}
void print(int mat[][10], int n){
    for(int i = 0; i < n; ++i){
         for(int j = 0; j < n; ++j){
             std::cout << mat[i][j] << " ";
         }
         std::cout << std::endl;
    }
    std::cout << std::endl;
}

void sum(int mat1[][10], int mat2[][10], int n){
    for(int i = 0; i < n; ++i){
        for(int j = 0; j < n; ++j){
            mat1[i][j] += mat2[i][j];
        }
    }
}

matrici bazmapatkum
#include <iostream>

void scan(int mat[][10], int);
void print(int mat[][10], int);
void mul(int mat1[][10], int mat2[][10], int, int mat3[][10]);


int main(){
    int mat1[10][10] = {{10, 20, 10}, {4, 5, 6}, {2, 3, 5}};
    int mat2[10][10] = {{3, 2, 4}, {3, 3, 9}, {4, 4, 2}};
    int mat3[10][10] = {};
    int n = 0; 
    do{
        std::cout << "Enter size: ";
        std::cin >> n;
    }while(n < 1 || n > 10);
    
    //scan(mat1, n);
    //scan(mat2, n);
    print(mat1, n);
    print(mat2, n);
    mul(mat1, mat2, n, mat3);
    print(mat3, n);
}


void scan(int mat[][10], int n){
    for(int i = 0; i < n; ++i){
         for(int j = 0; j < n; ++j){
            std::cout << "Enter: ";
            std::cin >> mat[i][j];// = rand()%9;
         }
    }
}
void print(int mat[][10], int n){
    for(int i = 0; i < n; ++i){
         for(int j = 0; j < n; ++j){
             std::cout << mat[i][j] << " ";
         }
         std::cout << std::endl;
    }
    std::cout << std::endl;
}

void mul(int mat1[][10], int mat2[][10], int n, int mat3[][10]){
    for(int i = 0; i < n; ++i){
        for(int j = 0; j < n; ++j){
            for(int k = 0; k < n; ++k){
                mat3[i][j] += mat1[i][k] * mat2[k][j];
            }
        }
    }
}



