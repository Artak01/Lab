Տրված ամբողջ թվային զանգվածը սորտավորել Merge Sort ալգորիթմով։
#include <iostream>

void merge(int* arr, int f, int m, int e){
    int f1 = f;
    int e1 = m;
    int f2 = m + 1;
    int e2 = e;
    int s = e - f + 1;
    int* tmp = new int[s];
    int ind = 0;
    while(f1 <= e1 && f2 <= e2){
        if(arr[f1] <= arr[f2]){
            tmp[ind] = arr[f1];
            ++f1;
        }
        else{
            tmp[ind] = arr[f2];
            ++f2;
        }
        ++ind;
    }
    while(f1 <= e1){
        tmp[ind] = arr[f1];
        ++f1;
        ++ind;
    }
    while(f2 <= e2){
        tmp[ind] = arr[f2];
        ++f2;
        ++ind;
    }
    for(int i = f; i < s; ++i){
        arr[f + i] = tmp[i];
    }
    delete[] tmp;
}

void merge_sort(int* arr, int f, int e){
    if(e > f){
        int m = f + (e - f) / 2;
        merge_sort(arr, f, m);
        merge_sort(arr, m + 1, e);
        
        merge(arr, f, m, e);
    }
}


int main()
{
    int size = 0;
    std::cout << "Enter the array size: ";
    std::cin >> size;
    int* arr = new int[size];
    for(int i = 0; i < size; ++i){
        std::cout << "Enter the sorted array: ";
        std::cin >> arr[i];
    }
    
    merge_sort(arr, 0, size - 1);
    
    std::cout << "Sorted array! " << std::endl;
    for(int i = 0; i < size; ++i){
        std::cout << arr[i] << " ";
    }
    
    delete[] arr;
    
    return 0;
}


Տրված ամբողջ թվային զանգվածը սորտավորել Quicksort ալգորիթմով։
#include <iostream>

int partition(int* arr, int f, int e){
    int pivot = arr[f];
    int i = f + 1;
    int j = e;
    while(i < j){
        while(arr[i] <= pivot){
            ++i;
        }
        while(arr[j] > pivot){
            --j;
        }
        if (i < j){
           std::swap(arr[i], arr[j]); 
        }
    }
    std::swap(arr[j], arr[f]);
    return j;
}

void quick_s(int* arr, int f, int e){
    if (e > f){
        int ind = partition(arr, f, e);
        quick_s(arr, f, ind - 1);
        quick_s(arr, ind + 1, e);
    }
}

int main(){
    int arr[10] = {5, 3, 1, 0, 4, 2, 1, 5, 8, 6};
    quick_s(arr, 0, 9);
    for(int i = 0; i < 10; ++i){
        std::cout << arr[i] << " ";
    }
    std::cout << std::endl;
    return 0;
}








